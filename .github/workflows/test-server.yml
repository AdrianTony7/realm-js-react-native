name: Run test server
env:
  SERVER_TAG: latest
  NGROK_SUBDOMAIN: ${{ inputs.ngrok_subdomain || format('realm-js-test-server-{0}-{1}', github.run_id, github.run_attempt) }}

on:
  workflow_dispatch:
    inputs:
      ngrok_subdomain:
        description: A subdomain to prefix ".ngrok.io" used for the server.
        type: string
      run_id:
        description: The GitHub Actions run id of the triggering action, which will be used to await completion.
        type: number

jobs:
  server:
    name: Run test server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Start Ngrok
        run: docker run --detach --network host --env NGROK_AUTHTOKEN ngrok/ngrok http --subdomain ${{ env.NGROK_SUBDOMAIN }} 9090
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
      - name: Preparing server entrypoint
        # Writes an entrypoint script, which will patch the test-config to use the right hostnames, before it starts the server
        run: |
          echo '#!/bin/bash' >> patch-and-run.sh
          echo 'NGROK_HOSTNAME=${{ env.NGROK_SUBDOMAIN }}.ngrok.io' >> patch-and-run.sh
          # Replace localhost:9090 with the Ngrok hostname, "http" with "https" and "ws" with "wss"
          echo 'sed -i -e "s/http:\/\/localhost:9090/https:\/\/${NGROK_HOSTNAME}/g" -e "s/ws:\/\/localhost:9090/wss:\/\/${NGROK_HOSTNAME}/g" /stitch/test_config.json' >> patch-and-run.sh
          echo 'cat /stitch/test_config.json' >> patch-and-run.sh
          # Start the server
          echo '/run.sh' >> patch-and-run.sh
          chmod u+x patch-and-run.sh
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ghcr.io
          username: realm-ci
          password: ${{ secrets.REALM_CI_GITHUB_API_KEY }}
      - name: Start server
        run: docker run ${{ env.MODE }} --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --publish 9090:9090 --volume `pwd`/patch-and-run.sh:/patch-and-run.sh --entrypoint /patch-and-run.sh ghcr.io/realm/ci/mongodb-realm-test-server:${{ env.SERVER_TAG }}
        env:
          MODE: ${{ github.event_name == 'workflow_dispatch' && '--interactive' || '--detach' }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BAAS_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BAAS_AWS_SECRET_ACCESS_KEY }}
      - name: Wait for triggering run to complete
        if:  ${{ inputs.run_id }}
        run: gh run watch ${{ inputs.run_id }}
        env:
          GH_TOKEN: ${{ github.token }}
